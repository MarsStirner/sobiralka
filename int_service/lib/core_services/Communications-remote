#!/usr/bin/env python
#
# Autogenerated by Thrift Compiler (0.9.0)
#
# DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
#
#  options string: py:new_style,utf8strings
#

import sys
import pprint
from urlparse import urlparse
from thrift.transport import TTransport
from thrift.transport import TSocket
from thrift.transport import THttpClient
from thrift.protocol import TBinaryProtocol

import Communications
from ttypes import *

if len(sys.argv) <= 1 or sys.argv[1] == '--help':
  print ''
  print 'Usage: ' + sys.argv[0] + ' [-h host[:port]] [-u url] [-f[ramed]] function [arg1 [arg2...]]'
  print ''
  print 'Functions:'
  print '  Organization getOrganisationInfo(string infisCode)'
  print '   getOrgStructures(i32 parent_id, bool recursive, string infisCode)'
  print '   getAddresses(i32 orgStructureId, bool recursive, string infisCode)'
  print '   findOrgStructureByAddress(FindOrgStructureByAddressParameters params)'
  print '   getPersonnel(i32 orgStructureId, bool recursive, string infisCode)'
  print '  TicketsAvailability getTotalTicketsAvailability(GetTicketsAvailabilityParameters params)'
  print '   getTicketsAvailability(GetTicketsAvailabilityParameters params)'
  print '  Amb getWorkTimeAndStatus(GetTimeWorkAndStatusParameters params)'
  print '  PatientStatus addPatient(AddPatientParameters params)'
  print '  PatientStatus findPatient(FindPatientParameters params)'
  print '   findPatients(FindMultiplePatientsParameters params)'
  print '  PatientStatus findPatientByPolicyAndDocument(FindPatientByPolicyAndDocumentParameters params)'
  print '  bool changePatientPolicy(ChangePolicyParameters params)'
  print '   getPatientInfo( patientIds)'
  print '   getPatientContacts(i32 patientId)'
  print '   getPatientOrgStructures(i32 parentId)'
  print '  EnqueuePatientStatus enqueuePatient(EnqueuePatientParameters params)'
  print '   getPatientQueue(i32 parentId)'
  print '  DequeuePatientStatus dequeuePatient(i32 patientId, i32 queueId)'
  print '   getSpecialities(string hospitalUidFrom)'
  print ''
  sys.exit(0)

pp = pprint.PrettyPrinter(indent = 2)
host = 'localhost'
port = 9090
uri = ''
framed = False
http = False
argi = 1

if sys.argv[argi] == '-h':
  parts = sys.argv[argi+1].split(':')
  host = parts[0]
  if len(parts) > 1:
    port = int(parts[1])
  argi += 2

if sys.argv[argi] == '-u':
  url = urlparse(sys.argv[argi+1])
  parts = url[1].split(':')
  host = parts[0]
  if len(parts) > 1:
    port = int(parts[1])
  else:
    port = 80
  uri = url[2]
  if url[4]:
    uri += '?%s' % url[4]
  http = True
  argi += 2

if sys.argv[argi] == '-f' or sys.argv[argi] == '-framed':
  framed = True
  argi += 1

cmd = sys.argv[argi]
args = sys.argv[argi+1:]

if http:
  transport = THttpClient.THttpClient(host, port, uri)
else:
  socket = TSocket.TSocket(host, port)
  if framed:
    transport = TTransport.TFramedTransport(socket)
  else:
    transport = TTransport.TBufferedTransport(socket)
protocol = TBinaryProtocol.TBinaryProtocol(transport)
client = Communications.Client(protocol)
transport.open()

if cmd == 'getOrganisationInfo':
  if len(args) != 1:
    print 'getOrganisationInfo requires 1 args'
    sys.exit(1)
  pp.pprint(client.getOrganisationInfo(args[0],))

elif cmd == 'getOrgStructures':
  if len(args) != 3:
    print 'getOrgStructures requires 3 args'
    sys.exit(1)
  pp.pprint(client.getOrgStructures(eval(args[0]),eval(args[1]),args[2],))

elif cmd == 'getAddresses':
  if len(args) != 3:
    print 'getAddresses requires 3 args'
    sys.exit(1)
  pp.pprint(client.getAddresses(eval(args[0]),eval(args[1]),args[2],))

elif cmd == 'findOrgStructureByAddress':
  if len(args) != 1:
    print 'findOrgStructureByAddress requires 1 args'
    sys.exit(1)
  pp.pprint(client.findOrgStructureByAddress(eval(args[0]),))

elif cmd == 'getPersonnel':
  if len(args) != 3:
    print 'getPersonnel requires 3 args'
    sys.exit(1)
  pp.pprint(client.getPersonnel(eval(args[0]),eval(args[1]),args[2],))

elif cmd == 'getTotalTicketsAvailability':
  if len(args) != 1:
    print 'getTotalTicketsAvailability requires 1 args'
    sys.exit(1)
  pp.pprint(client.getTotalTicketsAvailability(eval(args[0]),))

elif cmd == 'getTicketsAvailability':
  if len(args) != 1:
    print 'getTicketsAvailability requires 1 args'
    sys.exit(1)
  pp.pprint(client.getTicketsAvailability(eval(args[0]),))

elif cmd == 'getWorkTimeAndStatus':
  if len(args) != 1:
    print 'getWorkTimeAndStatus requires 1 args'
    sys.exit(1)
  pp.pprint(client.getWorkTimeAndStatus(eval(args[0]),))

elif cmd == 'addPatient':
  if len(args) != 1:
    print 'addPatient requires 1 args'
    sys.exit(1)
  pp.pprint(client.addPatient(eval(args[0]),))

elif cmd == 'findPatient':
  if len(args) != 1:
    print 'findPatient requires 1 args'
    sys.exit(1)
  pp.pprint(client.findPatient(eval(args[0]),))

elif cmd == 'findPatients':
  if len(args) != 1:
    print 'findPatients requires 1 args'
    sys.exit(1)
  pp.pprint(client.findPatients(eval(args[0]),))

elif cmd == 'findPatientByPolicyAndDocument':
  if len(args) != 1:
    print 'findPatientByPolicyAndDocument requires 1 args'
    sys.exit(1)
  pp.pprint(client.findPatientByPolicyAndDocument(eval(args[0]),))

elif cmd == 'changePatientPolicy':
  if len(args) != 1:
    print 'changePatientPolicy requires 1 args'
    sys.exit(1)
  pp.pprint(client.changePatientPolicy(eval(args[0]),))

elif cmd == 'getPatientInfo':
  if len(args) != 1:
    print 'getPatientInfo requires 1 args'
    sys.exit(1)
  pp.pprint(client.getPatientInfo(eval(args[0]),))

elif cmd == 'getPatientContacts':
  if len(args) != 1:
    print 'getPatientContacts requires 1 args'
    sys.exit(1)
  pp.pprint(client.getPatientContacts(eval(args[0]),))

elif cmd == 'getPatientOrgStructures':
  if len(args) != 1:
    print 'getPatientOrgStructures requires 1 args'
    sys.exit(1)
  pp.pprint(client.getPatientOrgStructures(eval(args[0]),))

elif cmd == 'enqueuePatient':
  if len(args) != 1:
    print 'enqueuePatient requires 1 args'
    sys.exit(1)
  pp.pprint(client.enqueuePatient(eval(args[0]),))

elif cmd == 'getPatientQueue':
  if len(args) != 1:
    print 'getPatientQueue requires 1 args'
    sys.exit(1)
  pp.pprint(client.getPatientQueue(eval(args[0]),))

elif cmd == 'dequeuePatient':
  if len(args) != 2:
    print 'dequeuePatient requires 2 args'
    sys.exit(1)
  pp.pprint(client.dequeuePatient(eval(args[0]),eval(args[1]),))

elif cmd == 'getSpecialities':
  if len(args) != 1:
    print 'getSpecialities requires 1 args'
    sys.exit(1)
  pp.pprint(client.getSpecialities(args[0],))

else:
  print 'Unrecognized method %s' % cmd
  sys.exit(1)

transport.close()
